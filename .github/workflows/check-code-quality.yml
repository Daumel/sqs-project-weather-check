name: Check Code Quality Job

on:
  push:
    branches:
      - main

  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  create-database-branch:
    uses: ./.github/workflows/create-database-branch.yml
    with:
      branch_name: 'test-branch-${{ github.run_id }}'
    secrets: inherit

  check-code-quality:
    runs-on: ubuntu-latest
    needs: create-database-branch

    env:
      API_KEY: ${{ secrets.API_KEY }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "cache-dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check formatting
        run: yarn prettier --check src

      - name: Start application server
        uses: ./.github/actions/start-application-server
        with:
          database_url_encrypted: ${{ needs.create-database-branch.outputs.database_url_encrypted }}
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          api_key: ${{ env.API_KEY }}

      - name: Run unit and integration tests
        run: yarn jest --coverage

      - name: Run end-to-end tests
        run: yarn cypress run --record false

      - name: Run architecture tests
        run: yarn depcruise src --include-only "^src"

      - name: Run stress test
        uses: grafana/k6-action@v0.3.0
        with:
          filename: '__tests__/k6/stress-test.js'

      - name: Perform ZAP scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://127.0.0.1:3000/'
          rules_file_name: '.zap/rules.tsv'
          allow_issue_writing: false

      - name: Quality Gate
        uses: ./.github/actions/quality-gate
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          sonar_token: ${{ env.SONAR_TOKEN }}

      - name: Cache dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.cache-dir }}
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}

      - name: Clean up database branch
        if: always()
        uses: barelylabs/planetscale-action@v0.1.3-alpha
        env:
          PLANETSCALE_ORG_NAME: 'niklas-wilhelm'
          PLANETSCALE_DB_NAME: 'sqs-project-weather-check'
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
        with:
          action: 'delete-branch'
          branch-name: 'test-branch-${{ github.run_id }}'
