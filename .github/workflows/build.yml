name: Build


on:
  push:
    branches:
      - main

  pull_request:
    types: [ opened, synchronize, reopened ]


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "cache-dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create ESLint report
        run: yarn lint -f sonarqube -o ./eslint_report.json

      - name: Check formatting
        run: yarn prettier

      - name: Prepare tests
        uses: ./.github/actions/prepare-tests
        with:
          planetscale_service_token_id: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          planetscale_service_token: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
          api_key: ${{ secrets.API_KEY }}

      - name: Run unit and integration tests
        run: yarn jest --coverage --silent

      - name: Run end-to-end tests
        run: yarn cypress run --record false

      - name: Check Quality Gate
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Cache dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.cache-dir }}
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}