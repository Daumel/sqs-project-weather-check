name: Create Database Branch Job

on:
  workflow_call:
    outputs:
      database_url_encrypted:
        value: ${{ jobs.create-database-branch.outputs.database_url }}

jobs:
  create-database-branch:
    runs-on: ubuntu-latest

    outputs:
      database_url_encrypted: ${{ steps.encrypt_database_url.outputs.database_url_encrypted }}

    env:
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - name: Extract branch name
        id: branch_name
        uses: tj-actions/branch-names@v7

      - name: Create database branch
        uses: planetscale/create-branch-action@v1
        with:
          org_name: 'niklas-wilhelm'
          database_name: 'sqs-project-weather-check'
          branch_name: '${{ github.run_id }}--${{ steps.branch_name.outputs.current_branch }}'
          from: 'main'

      - name: Create database branch credentials
        uses: planetscale/create-branch-password-action@v1
        id: create_database_credentials
        with:
          org_name: 'niklas-wilhelm'
          database_name: 'sqs-project-weather-check'
          branch_name: '${{ steps.branch_name.outputs.current_branch }}--${{ github.run_id }}'
          name: 'pass-${{ steps.branch_name.outputs.current_branch }}--${{ github.run_id }}'

      - name: Encrypt database url
        id: encrypt_database_url
        run: |
          $database_url="mysql://${{ steps.create_database_credentials.outputs.username }}:${{ steps.create_database_credentials.outputs.password }}@${{ steps.create_database_credentials.outputs.hostname }}/sqs-project-weather-check?sslaccept=strict"
          echo "::add-mask::$database_url"
          database_url_encrypted=$(gpg --symmetric --batch --passphrase "$GPG_PASSPHRASE" --output - <(echo "$database_url") | base64 -w0)
          echo "::set-output name=database_url_encrypted::$database_url_encrypted"
