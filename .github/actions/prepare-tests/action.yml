name: Prepare Tests Action
description: This action takes the necessary steps to be able to run integration and e2e tests.
inputs:
  planetscale_service_token_id:
    required: true
  planetscale_service_token:
    required: true
  api_key:
    required: true
runs:
  using: composite
  steps:
    - name: Extract branch name
      id: extract_branch
      shell: bash
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

    - name: Create database branch
      uses: planetscale/create-branch-action@v1
      id: create_branch
      with:
        org_name: niklas-wilhelm
        database_name: sqs-project-weather-check
        branch_name: ${{ steps.extract_branch.outputs.branch }}
        from: main
      env:
        PLANETSCALE_SERVICE_TOKEN_ID: ${{ inputs.planetscale_service_token_id }}
        PLANETSCALE_SERVICE_TOKEN: ${{ inputs.planetscale_service_token }}

    - name: Create database branch credentials
      uses: planetscale/create-branch-password-action@v1
      id: create_database_credentials
      with:
        org_name: my_org
        database_name: recipes_db
        branch_name: ${{ steps.extract_branch.outputs.branch }}
        name: 'pass_${{ steps.extract_branch.outputs.branch }}'
      env:
        PLANETSCALE_SERVICE_TOKEN_ID: ${{ inputs.planetscale_service_token_id }}
        PLANETSCALE_SERVICE_TOKEN: ${{ inputs.planetscale_service_token }}

    - name: Create .env file
      shell: bash
      run: |
        DATABASE_URL='mysql://${{ steps.create_database_credentials.outputs.username }}:${{ steps.create_database_credentials.outputs.password }}@${{ steps.create_database_credentials.outputs.hostname }}/sqs-project-weather-check?sslaccept=strict'
        API_KEY='${{ inputs.api_key }}'
        
        echo 'DATABASE_URL=$DATABASE_URL
              API_KEY=$API_KEY' > .env
        
        cat .env

    - name: Build
      shell: bash
      run: yarn build

    - name: Start
      shell: bash
      run: yarn start & wait-on --timeout 60000 http://localhost:3000